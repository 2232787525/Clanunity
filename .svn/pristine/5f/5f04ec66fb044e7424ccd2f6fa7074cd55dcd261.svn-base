import UIKit
import MBProgressHUD
import MJRefresh

//MARK: - ----------------同宗活动详情页
class CollectInfo: DynamicInfo {
    
    
    override func viewDidLoad() {
        super.viewDidLoad()

        shoucangBtn.handleEventTouchUpInside {[weak self] in
            if (self?.shoucangBtn.isSelected)!{
                ClanAPI.requestForCancelcollect(targetid: (self?.model?.targetid)!, targettype: "2", result: { (result) in
                    if (result.status == "200"){
                        WFHudView.showMsg("取消收藏", in: self?.view)
                        self?.shoucangBtn.isSelected = false
                    }else{
                        WFHudView.showMsg(result.message ?? "取消收藏失败", in: self?.view)
                    }
                })
            }else{
                ClanAPI.requestForSubmitcollect(targetid: (self?.model?.targetid)!, targettype: "2", result: { (result) in
                    if (result.status == "200"){
                        WFHudView.showMsg("已收藏", in: self?.view)
                        self?.shoucangBtn.isSelected = true
                    }else{
                        WFHudView.showMsg(result.message ?? "收藏失败", in: self?.view)
                    }
                })
            }
        }
        
        
        talkBtn.handleEventTouchUpInside { [weak self] in
            commentInputView.shareInstance().showcommentViewWithmsg("评论:", ifSingleType: false, sendText: { (text) in
                print("发布评论")
                ClanAPI.requestForSubmitcomment(targetid: (self?.model?.targetid)!, content: text, targettype: "2", touserid: nil, parentid: nil, result: { (result) in
                    if (result.status == "200"){
                        if ((result.data != nil) && (result.data is Dictionary<String,Any>)){
                            let comment = commentModel.mj_object(withKeyValues: result.data)

                            var dic = comment?.fromuser
                            if dic == nil{
                                dic = [:]
                            }
                            dic!["headimg"] = UserServre.shareService.userModel.headimg
                            dic!["realname"] = UserServre.shareService.userModel.realname
                            comment?.fromuser = dic
                            
                            self?.dynamicArr.insert(comment!, at: 0)
                            WFHudView.showMsg("评论成功", in: self?.view)
                            self?.tableView.reloadData()
                        }else{
                            WFHudView.showMsg(result.message ?? "服务器返回错误", in: self?.view)
                        }
                    }else{
                        WFHudView.showMsg(result.message ?? "评论失败", in: self?.view)
                    }
                })
            })
        }
        
        zanBtn.handleEventTouchUpInside {[weak self] in
            if (self?.zanBtn.isSelected)!{
                print("取消赞")
                ClanAPI.requestForCancelpraise(targetid: (self?.model?.targetid)!, targettype: "2", result: { (result) in
                    if (result.status == "200"){
                        WFHudView.showMsg("点赞取消", in: self?.view)
                        self?.zanBtn.isSelected = false
                    }else{
                        WFHudView.showMsg(result.message ?? "点赞取消失败", in: self?.view)
                    }
                })
            }else{
                print("点赞")
                ClanAPI.requestForSubmitpraise(targetid: (self?.model?.targetid)!, targettype: "2", result: { (result) in
                    if (result.status == "200"){
                            WFHudView.showMsg("点赞成功", in: self?.view)
                        self?.zanBtn.isSelected = true
                    }else{
                        WFHudView.showMsg(result.message ?? "点赞失败", in: self?.view)
                    }
                })
            }
        }
    }
 
    
    // MARK: - Https网络请求
    override func requestforList(){
        ClanAPI.requestForcommentList(pagenum: pno, pagesize: pnu, targetid: (self.model?.targetid)!, targettype: "2", result: {[weak self] (result) in
            self?.tableView.mj_header.endRefreshing()
            self?.tableView.mj_footer.endRefreshing()
            
            if (result.status == "200"){
                if ((result.data != nil) && (result.data is Dictionary<String,Any>)){
                    let dic = result.data as! Dictionary<String,Any>
                    let arr = dic["list"]
                    
                    let resArr = commentModel.mj_objectArray(withKeyValuesArray: arr) as! [commentModel]
                    
                    if ((resArr.count) < (self?.pnu)!) {
                        self?.tableView.mj_footer.isHidden = true
                    }else{
                        self?.tableView.mj_footer.isHidden = false
                    }
                    if ((resArr.count) > 0){
                        if( (self?.pno)! > 1){
                            self?.dynamicArr = (self?.dynamicArr)! + resArr
                        }else{
                            self?.dynamicArr = resArr
                        }
                    }else{
                        if ( (self?.pno)! > 1){
                            self?.pno = (self?.pno)! - 1
                        }
                    }
                }
            }
            self?.tableView.reloadData()
            if self?.dynamicArr.count == 0{
                self?.emptyShow(show: true)
            }else{
                self?.emptyShow(show: false)
            }
        })
    }
}



