//
//  DataTypeExtension.swift
//  Clanunity
//
//  Created by wangyadong on 2018/2/27.
//  Copyright © 2018年 DlmTechnology. All rights reserved.
//

// MARK: - 数据类型的扩展
import Foundation


extension String{
    
    var trim : String{
        get{
            let temp = self.trimmingCharacters(in: CharacterSet.whitespacesAndNewlines);
            return temp.trimmingCharacters(in: CharacterSet.whitespaces)
        }set{}
    }

    
    /// 从String中截取出参数
    var urlParameters: [String: AnyObject]? {
        // 截取是否有参数
        guard let urlComponents = NSURLComponents(string: self), let queryItems = urlComponents.queryItems else {
            return nil
        }
        // 参数字典
        var parameters = [String: AnyObject]()
        
        // 遍历参数
        queryItems.forEach({ (item) in
            
            // 判断参数是否是数组
            if let existValue = parameters[item.name], let value = item.value {
                // 已存在的值，生成数组
                if var existValue = existValue as? [String] {
                    
                    existValue.append(value)
                } else {
//                    parameters[item.name] = [existValue, value]
                }
                
            } else {
                
                parameters[item.name] = item.value as AnyObject
            }
        })
        
        return parameters
    }
    
    static func getImageSize(urlStr : String) ->  (ImgSizeModel?) {
        let arr = urlStr.components(separatedBy: "_")
        if arr.count <= 1{
            return nil
        }
        let str2 = arr.last
        
        let arr2 = str2?.components(separatedBy: "X")
        
        if arr2?.count == 2{
            let model = ImgSizeModel.init()
            model.width = CGFloat(Double(arr2?.first ?? "0")!)
            
            if arr2?.last?.count ?? 0 > 0 {
                let str = (arr2?.last)!
                let arr3 = str.components(separatedBy: ".")
                model.heigh = CGFloat(Double(arr3.first ?? "0")!)
            }
            return model
        }
        return nil
    }
}

extension NSString{
    
    /// 剔除字符串
    var trim : NSString{
        get{
            let selfStr  = String.init(self)
           return NSString.init(string: selfStr);
        }set{
            
        }
    }
}


extension NSArray{
    
    /// 充满，图片正常显示多出部分切割
    class func cdi_imagesWithGif(gifNameInBoundle : String) -> (NSMutableArray) {
        
        let fileUrl = Bundle.main.url(forResource: gifNameInBoundle, withExtension: "gif")
        
        let gifSource = CGImageSourceCreateWithURL(fileUrl! as CFURL, nil)
        
        
        
        let gifCount = CGImageSourceGetCount(gifSource!)
        
        let frames = NSMutableArray.init(capacity: 0)
        
        for i in 0...gifCount - 1{
            let imageRef = CGImageSourceCreateImageAtIndex(gifSource!, i, nil)
            let image = UIImage.init(cgImage: imageRef!)
            if i%2 == 0{
                frames.add(image)
            }
        }
        return frames
    }
}

